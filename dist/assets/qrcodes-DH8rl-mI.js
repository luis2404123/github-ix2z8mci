import{s,A as d}from"./auth-ukEJXvp4.js";/* empty css                  */class i{static async getQRCodes(){try{const{data:{user:t}}=await s.auth.getUser();if(!t)throw new Error("User not authenticated");const{data:e,error:r}=await s.from("qr_codes").select(`
          *,
          translations (
            source_language,
            target_language,
            documents (name)
          )
        `).eq("user_id",t.id).order("created_at",{ascending:!1});if(r)throw r;return e.map(o=>({...o,translation_name:`${o.translations.documents.name} (${o.translations.source_language} → ${o.translations.target_language})`}))}catch(t){return console.error("Error fetching QR codes:",t),[]}}static async getCompletedTranslations(){try{const{data:{user:t}}=await s.auth.getUser();if(!t)throw new Error("User not authenticated");const{data:e,error:r}=await s.from("translations").select(`
          id,
          source_language,
          target_language,
          documents (name)
        `).eq("user_id",t.id).eq("status","completed").order("created_at",{ascending:!1});if(r)throw r;return e.map(o=>({...o,document_name:o.documents.name}))}catch(t){return console.error("Error fetching completed translations:",t),[]}}static async generateQRCode(t){try{const{data:{user:e}}=await s.auth.getUser();if(!e)throw new Error("User not authenticated");const r=`https://api.qrlingo.com/v1/translations/${t}`,{data:o,error:a}=await s.from("qr_codes").insert({user_id:e.id,translation_id:t,code_url:r,active:!0}).select().single();if(a)throw a;return{data:o,error:null}}catch(e){return console.error("Error generating QR code:",e),{data:null,error:e.message}}}static async deactivateQRCode(t){try{const{data:{user:e}}=await s.auth.getUser();if(!e)throw new Error("User not authenticated");const{data:r,error:o}=await s.from("qr_codes").update({active:!1}).eq("id",t).eq("user_id",e.id).select().single();if(o)throw o;return{data:r,error:null}}catch(e){return console.error("Error deactivating QR code:",e),{data:null,error:e.message}}}}class h{constructor(){this.init()}async init(){const{user:t,error:e}=await d.getCurrentUser();if(e||!t){window.location.href="/Login/login.html";return}this.initializeEventListeners(),this.loadQRCodes()}initializeEventListeners(){const t=document.getElementById("generate-qr-btn"),e=document.getElementById("qr-modal"),r=e.querySelector(".close-btn"),o=document.getElementById("qr-form");t.addEventListener("click",()=>{this.loadTranslations(),e.style.display="block"}),r.addEventListener("click",()=>{e.style.display="none"}),window.addEventListener("click",n=>{n.target===e&&(e.style.display="none")}),o.addEventListener("submit",async n=>{n.preventDefault(),await this.handleGenerateQR(o)});const a=document.querySelector(".search-input"),c=document.querySelector(".filter-select");a.addEventListener("input",()=>this.filterQRCodes()),c.addEventListener("change",()=>this.filterQRCodes()),document.getElementById("logout-btn").addEventListener("click",async()=>{const{error:n}=await d.signOut();n||(window.location.href="/Login/login.html")})}async loadQRCodes(){try{const t=await i.getQRCodes();this.renderQRCodes(t)}catch(t){console.error("Error loading QR codes:",t)}}async loadTranslations(){try{const t=await i.getCompletedTranslations(),e=document.getElementById("translation");e.innerHTML='<option value="">Select translation</option>',t.forEach(r=>{const o=document.createElement("option");o.value=r.id,o.textContent=`${r.document_name} (${r.source_language} → ${r.target_language})`,e.appendChild(o)})}catch(t){console.error("Error loading translations:",t)}}renderQRCodes(t){const e=document.getElementById("qr-codes-grid");e.innerHTML=t.length?"":"<p>No QR codes found</p>",t.forEach(r=>{const o=document.createElement("div");o.className="qr-code-card",o.innerHTML=`
        <img src="${r.code_url}" alt="QR Code" class="qr-code-image">
        <div class="qr-code-info">
          <h3>${r.translation_name}</h3>
          <p class="qr-code-meta">Created: ${new Date(r.created_at).toLocaleString()}</p>
          <div class="qr-code-actions">
            <button class="action-btn download-btn" data-url="${r.code_url}">Download</button>
            <button class="action-btn share-btn" data-url="${r.code_url}">Share</button>
            ${r.active?`
              <button class="action-btn deactivate-btn" data-id="${r.id}">Deactivate</button>
            `:""}
          </div>
        </div>
      `;const a=o.querySelector(".download-btn"),c=o.querySelector(".share-btn"),n=o.querySelector(".deactivate-btn");a.addEventListener("click",()=>this.downloadQRCode(r.code_url)),c.addEventListener("click",()=>this.shareQRCode(r.code_url)),n&&n.addEventListener("click",()=>this.deactivateQRCode(r.id)),e.appendChild(o)})}async handleGenerateQR(t){const e=t.translation.value;try{const r=await i.generateQRCode(e);if(r.error)throw new Error(r.error);document.getElementById("qr-modal").style.display="none",t.reset(),this.loadQRCodes()}catch(r){console.error("Error generating QR code:",r)}}filterQRCodes(){const t=document.querySelector(".search-input").value.toLowerCase(),e=document.querySelector(".filter-select").value;document.querySelectorAll(".qr-code-card").forEach(o=>{const a=o.querySelector("h3").textContent.toLowerCase(),c=o.querySelector(".deactivate-btn")!==null,n=a.includes(t),u=e==="all"||e==="active"&&c||e==="inactive"&&!c;o.style.display=n&&u?"block":"none"})}async downloadQRCode(t){try{const r=await(await fetch(t)).blob(),o=window.URL.createObjectURL(r),a=document.createElement("a");a.href=o,a.download="qr-code.png",document.body.appendChild(a),a.click(),document.body.removeChild(a),window.URL.revokeObjectURL(o)}catch(e){console.error("Error downloading QR code:",e)}}async shareQRCode(t){try{navigator.share?await navigator.share({title:"QRLingo Translation",text:"Scan this QR code to view the translated document",url:t}):(await navigator.clipboard.writeText(t),alert("QR code URL copied to clipboard!"))}catch(e){console.error("Error sharing QR code:",e)}}async deactivateQRCode(t){if(confirm("Are you sure you want to deactivate this QR code?"))try{const e=await i.deactivateQRCode(t);if(e.error)throw new Error(e.error);this.loadQRCodes()}catch(e){console.error("Error deactivating QR code:",e)}}}document.addEventListener("DOMContentLoaded",()=>{new h});
